plugins {
    id 'java'
}

group = 'com.rock_mc'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.papermc.io/repository/maven-public/' }
}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"

    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.45.3.0'

    testImplementation "org.junit.jupiter:junit-jupiter:5.9.3"
    testImplementation 'com.github.MockBukkit:MockBukkit:v1.20-SNAPSHOT'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.6'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

sourceSets {
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

tasks.named('test', Test) {
//    testLogging {
//        showStandardStreams = true
//    }
    useJUnitPlatform()
}

task testOnServer(type: Copy) {
    dependsOn('jar')
    from('build/libs/')
    into('server/plugins/')
    include('*.jar')
}
